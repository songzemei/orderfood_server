<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不过滤的资源（静态资源及登录相关） -->
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/failer.jsp"/>
    <security:http security="none" pattern="/favicon.ico"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/pages/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http auto-config="true" use-expressions="false">
        <!-- 配置资料连接，表示任意路径都需要ROLE_USER权限 -->
        <security:intercept-url pattern="/**" access="ROLE_BOSS"/>
        <!-- 自定义登陆页面，login-page 自定义登陆页面
                    login-processing-url 表单提交路径
                     username-parameter 表单用户名参数
                     password-parameter 表单密码参数
                authentication-failure-url 用户权限校验失败之后跳转的页面。
                default-target-url 登陆成功后跳转的页面。-->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-failure-url="/failer.jsp"
                             default-target-url="/main.jsp"/>
        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp"></security:logout>
    </security:http>
    <!-- 配置认证方式，使用数据库中认证用户 -->
    <security:authentication-manager>
        <!-- spring security 通过调用 UserService的方法获取User对象进行认证 -->
        <security:authentication-provider user-service-ref="adminService">
            <!-- 配置加密方式 -->
            <!--<security:password-encoder ref="passwordEncoder"></security:password-encoder>-->
        </security:authentication-provider>
    </security:authentication-manager>
    <!--1. 服务器权限控制 开启注解-->
    <!--<security:global-method-security secured-annotations="enabled"/>-->
    <!--（2）JSR250注解控制权限 开启注解-->
    <!--<security:global-method-security jsr250-annotations="enabled" />-->
    <!--配置标签解析器-->
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"></bean>
    <!-- 配置一个自带加密器 -->
    <!--<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>-->
</beans>